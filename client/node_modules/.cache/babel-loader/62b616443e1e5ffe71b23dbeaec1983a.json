{"ast":null,"code":"var _jsxFileName = \"/Users/daniel-mindlin/Documents/Bootcamp/Projects/redux-store/client/src/pages/Success.js\";\nimport React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map(item => item._id);\n\n      if (products.length) {\n        const {\n          data\n        } = await addOrder({\n          variables: {\n            products\n          }\n        });\n        const productData = data.addOrder.products;\n        productData.forEach(item => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n    }\n\n    saveOrder();\n  }, [addOrder]);\n  setTimeout(function () {\n    alert(\"\");\n  }, 3000);\n  window.location.assign('/');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Success!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Thank you for your purchase!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"You will now be redirected to the homepage\")));\n}\n\n;\nexport default Success;","map":{"version":3,"sources":["/Users/daniel-mindlin/Documents/Bootcamp/Projects/redux-store/client/src/pages/Success.js"],"names":["React","useEffect","useMutation","Jumbotron","ADD_ORDER","idbPromise","Success","addOrder","saveOrder","cart","products","map","item","_id","length","data","variables","productData","forEach","setTimeout","alert","window","location","assign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAIA,SAASC,OAAT,GAAmB;AAEf,QAAM,CAACC,QAAD,IAAaL,WAAW,CAACE,SAAD,CAA9B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AAChB,mBAAeO,SAAf,GAA2B;AAEvB,YAAMC,IAAI,GAAG,MAAMJ,UAAU,CAAC,MAAD,EAAS,KAAT,CAA7B;AACA,YAAMK,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACC,GAAtB,CAAjB;;AAEA,UAAIH,QAAQ,CAACI,MAAb,EAAqB;AACjB,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,QAAQ,CAAC;AAAES,UAAAA,SAAS,EAAE;AAAEN,YAAAA;AAAF;AAAb,SAAD,CAA/B;AACA,cAAMO,WAAW,GAAGF,IAAI,CAACR,QAAL,CAAcG,QAAlC;AAEAO,QAAAA,WAAW,CAACC,OAAZ,CAAqBN,IAAD,IAAU;AAC5BP,UAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmBO,IAAnB,CAAV;AACD,SAFD;AAGD;AAEN;;AAEDJ,IAAAA,SAAS;AAGR,GApBQ,EAoBN,CAACD,QAAD,CApBM,CAAT;AAsBAY,EAAAA,UAAU,CAAC,YAAU;AAAEC,IAAAA,KAAK,CAAC,EAAD,CAAL;AAAY,GAAzB,EAA2B,IAA3B,CAAV;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDALF,CADF,CADF;AAaD;;AAAA;AAEH,eAAejB,OAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\n\n\nfunction Success() {\n\n    const [addOrder] = useMutation(ADD_ORDER);\n\n    useEffect(() => {\n    async function saveOrder() {\n\n        const cart = await idbPromise('cart', 'get');\n        const products = cart.map(item => item._id);\n\n        if (products.length) {\n            const { data } = await addOrder({ variables: { products } });\n            const productData = data.addOrder.products;\n          \n            productData.forEach((item) => {\n              idbPromise('cart', 'delete', item);\n            });\n          }\n\n    }\n\n    saveOrder();\n\n\n    }, [addOrder]);\n\n    setTimeout(function(){ alert(\"\"); }, 3000);\n    window.location.assign('/')\n\n\n    return (\n      <div>\n        <Jumbotron>\n          <h1>Success!</h1>\n          <h2>\n            Thank you for your purchase!\n          </h2>\n          <h2>\n            You will now be redirected to the homepage\n          </h2>\n        </Jumbotron>\n      </div>\n    );\n  };\n\nexport default Success;"]},"metadata":{},"sourceType":"module"}