{"ast":null,"code":"var _jsxFileName = \"/Users/daniel-mindlin/Documents/Bootcamp/Projects/redux-store/client/src/components/Cart/index.js\";\nimport React, { useEffect } from 'react';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const state = useSelector(state => {\n    return state;\n  });\n  const dispatch = useDispatch();\n  const [getCheckout, {\n    data\n  }] = useLazyQuery(QUERY_CHECKOUT);\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({\n        type: ADD_MULTIPLE_TO_CART,\n        products: [...cart]\n      });\n    }\n\n    ;\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({\n      type: TOGGLE_CART\n    });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n    state.cart.forEach(item => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n    getCheckout({\n      variables: {\n        products: productIds\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then(res => {\n        res.redirectToCheckout({\n          sessionId: data.checkout.session\n        });\n      });\n    }\n  }, [data]);\n\n  if (!state.cartOpen) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-closed\",\n      onClick: toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"\\uD83D\\uDED2\"));\n  }\n\n  console.log(state);\n  return (\n    /*#__PURE__*/\n    // <div className=\"cart\">\n    //   <div className=\"close\" onClick={toggleCart}>[close]</div>\n    //   <h2>Shopping Cart</h2>\n    //   <div>\n    //       <CartItem item={{name:'Camera', image:'camera.jpg', price:5, purchaseQuantity:3}} />\n    //       <CartItem item={{name:'Soap', image:'soap.jpg', price:6, purchaseQuantity:4}} />\n    //       <div className=\"flex-row space-between\">\n    //         <strong>Total: $0</strong>\n    //         {\n    //           Auth.loggedIn() ?\n    //             <button>\n    //               Checkout\n    //             </button>\n    //             :\n    //             <span>(log in to check out)</span>\n    //         }\n    //       </div>\n    //     </div>\n    // </div>\n    React.createElement(\"div\", {\n      className: \"cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"close\",\n      onClick: toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 3\n      }\n    }, \"[close]\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 3\n      }\n    }, \"Shopping Cart\"), state.cart.length ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }, state.cart.map(item => /*#__PURE__*/React.createElement(CartItem, {\n      key: item._id,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-row space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Total: $\", calculateTotal()), Auth.loggedIn() ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: submitCheckout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Checkout\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"(log in to check out)\"))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"shocked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, \"\\uD83D\\uDE31\"), \"You haven't added anything to your cart yet!\"))\n  );\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/daniel-mindlin/Documents/Bootcamp/Projects/redux-store/client/src/components/Cart/index.js"],"names":["React","useEffect","CartItem","Auth","TOGGLE_CART","ADD_MULTIPLE_TO_CART","idbPromise","QUERY_CHECKOUT","loadStripe","useLazyQuery","useDispatch","useSelector","stripePromise","Cart","state","dispatch","getCheckout","data","getCart","cart","type","products","length","toggleCart","calculateTotal","sum","forEach","item","price","purchaseQuantity","toFixed","submitCheckout","productIds","i","push","_id","variables","then","res","redirectToCheckout","sessionId","checkout","session","cartOpen","console","log","map","loggedIn"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n\n    const state = useSelector((state) => {\n      return state\n    });\n\n    const dispatch = useDispatch();\n\n    const [getCheckout, {data}] = useLazyQuery(QUERY_CHECKOUT);\n\n    useEffect(() => {\n        async function getCart() {\n            const cart = await idbPromise('cart', 'get');\n            dispatch({\n                type: ADD_MULTIPLE_TO_CART,\n                products: [...cart]\n            })\n        };\n\n        if(!state.cart.length) {\n            getCart();\n        }\n    }, [state.cart.length, dispatch]);\n\n\n\n    function toggleCart() {\n        dispatch({type: TOGGLE_CART});\n    }\n\n    function calculateTotal() {\n        let sum = 0;\n        state.cart.forEach(item => {\n            sum+= item.price * item.purchaseQuantity;\n        })\n\n        return sum.toFixed(2);\n    }\n\n\n    function submitCheckout() {\n        const productIds = [];\n\n        state.cart.forEach((item) => {\n            for (let i=0; i<item.purchaseQuantity; i++) {\n                productIds.push(item._id);\n            }\n        })\n\n        getCheckout({\n            variables: {products: productIds}\n        })\n    }\n\n\n    useEffect(() => {\n        if(data) {\n            stripePromise.then((res) => {\n                res.redirectToCheckout({ sessionId: data.checkout.session})\n            })\n        }\n    }, [data])\n    \n\n    if(!state.cartOpen) {\n        return (\n            <div className=\"cart-closed\" onClick={toggleCart}>\n              <span\n                role=\"img\"\n                aria-label=\"trash\">🛒</span>\n            </div>\n          );\n    }\n\n    console.log(state);\n\n\n  return (\n    // <div className=\"cart\">\n    //   <div className=\"close\" onClick={toggleCart}>[close]</div>\n    //   <h2>Shopping Cart</h2>\n    //   <div>\n    //       <CartItem item={{name:'Camera', image:'camera.jpg', price:5, purchaseQuantity:3}} />\n    //       <CartItem item={{name:'Soap', image:'soap.jpg', price:6, purchaseQuantity:4}} />\n\n    //       <div className=\"flex-row space-between\">\n    //         <strong>Total: $0</strong>\n    //         {\n    //           Auth.loggedIn() ?\n    //             <button>\n    //               Checkout\n    //             </button>\n    //             :\n    //             <span>(log in to check out)</span>\n    //         }\n    //       </div>\n    //     </div>\n    // </div>\n    <div className=\"cart\">\n  <div className=\"close\" onClick={toggleCart}>[close]</div>\n  <h2>Shopping Cart</h2>\n  {state.cart.length ? (\n    <div>\n      {state.cart.map(item => (\n        <CartItem key={item._id} item={item} />\n      ))}\n      <div className=\"flex-row space-between\">\n        <strong>Total: ${calculateTotal()}</strong>\n        {\n          Auth.loggedIn() ?\n            <button onClick={submitCheckout}>\n              Checkout\n            </button>\n            :\n            <span>(log in to check out)</span>\n        }\n      </div>\n    </div>\n  ) : (\n    <h3>\n      <span role=\"img\" aria-label=\"shocked\">\n        😱\n      </span>\n      You haven't added anything to your cart yet!\n    </h3>\n  )}\n</div>\n  );\n};\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}